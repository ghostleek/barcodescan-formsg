function e(e,t,i){if(!t.has(e))throw new TypeError("attempted to "+i+" private field on non-instance");return t.get(e)}function t(e,t){return t.get?t.get.call(e):t.value}function i(i,s){return t(i,e(i,s,"get"))}function s(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}function n(e,t,i){s(e,t),t.set(e,i)}function a(e,t,i){if(t.set)t.set.call(e,i);else{if(!t.writable)throw new TypeError("attempted to set read only private field");t.value=i}}function o(t,i,s){return a(t,e(t,i,"set"),s),s}function r(e,t,i){if(!t.has(e))throw new TypeError("attempted to get private field on non-instance");return i}function l(e,t){s(e,t),t.add(e)}const h=document.createElement("template"),d=String.raw;h.innerHTML=d`
  <style>:host { display: contents; }</style>
  <slot></slot>
`;var c=new WeakMap,u=new WeakMap,b=new WeakMap,w=new WeakSet,p=new WeakSet,v=new WeakMap,f=new WeakSet;class m extends HTMLElement{static get observedAttributes(){return["disabled"]}attributeChangedCallback(e,t,i){"disabled"===e&&t!==i&&(this.disabled?r(this,p,g).call(this):r(this,w,E).call(this))}connectedCallback(){r(this,f,y).call(this,"disabled"),"ResizeObserver"in window&&(o(this,u,new ResizeObserver((e=>{this.dispatchEvent(new CustomEvent("resize-observer:resize",{bubbles:!0,composed:!0,detail:{entries:e}}))}))),this.disabled||r(this,w,E).call(this),i(this,c).addEventListener("slotchange",i(this,v)))}disconnectedCallback(){r(this,p,g).call(this),i(this,c).removeEventListener("slotchange",i(this,v))}get disabled(){return this.hasAttribute("disabled")}set disabled(e){e?this.setAttribute("disabled",""):this.removeAttribute("disabled")}static defineCustomElement(e="resize-observer"){"undefined"==typeof window||window.customElements.get(e)||window.customElements.define(e,m)}constructor(){super(),l(this,w),l(this,p),l(this,f),n(this,c,{writable:!0,value:void 0}),n(this,u,{writable:!0,value:void 0}),n(this,b,{writable:!0,value:void 0}),n(this,v,{writable:!0,value:()=>{this.disabled||r(this,w,E).call(this)}}),this.shadowRoot||(this.attachShadow({mode:"open"}),this.shadowRoot.appendChild(h.content.cloneNode(!0))),o(this,c,this.shadowRoot.querySelector("slot")),o(this,u,null),o(this,b,[])}}function E(){i(this,c)&&i(this,u)&&(i(this,b).forEach((e=>i(this,u).unobserve(e))),o(this,b,[]),i(this,c).assignedElements().forEach((e=>{i(this,u).observe(e),i(this,b).push(e)})))}function g(){i(this,u)&&i(this,u).disconnect()}function y(e){if(Object.prototype.hasOwnProperty.call(this,e)){const t=this[e];delete this[e],this[e]=t}}export{m as ResizeObserverElement};
//# sourceMappingURL=resize-observer.js.map
